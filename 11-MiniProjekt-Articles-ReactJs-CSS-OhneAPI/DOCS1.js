//اموزش ری اکت سالار حق
// 

/* داخل یک عبارت JSX، شما می‌توانید جاوااسکریپت بنویسید، اما باید آن را در داخل آکولاد {} قرار دهید. به این ترتیب می‌توانید JSX و جاوااسکریپت را به طور نامحدود در هم تو در تو کنید.

JSX عبارات جاوااسکریپت معمولی هستند که می‌توانید به آن‌ها متغیر نسبت دهید یا به عنوان مقدار برگشتی از توابع استفاده کنید.

شما مجبور نیستید از JSX در اپلیکیشن React استفاده کنید. به جای نوشتن عناصر و کامپوننت‌ها به صورت تگ، می‌توانید از تابع createElement استفاده کنید. معایب این روش این است که کد منبع خیلی سریع پیچیده و ناخوانا می‌شود و به خصوص در اینجا، تو در تو کردن آن به سختی قابل انجام است.

کامپوننت StrictMode که در فایل index.js استفاده می‌شود، مشابه حالت Strict در جاوااسکریپت است. این کامپوننت بررسی‌ها و هشدارهای اضافی را برای اپلیکیشن‌های React فعال می‌کند تا منابع بالقوه خطا را شناسایی کند. به عنوان مثال، شما هشدار دریافت خواهید کرد اگر از اثرات جانبی غیرمنتظره استفاده کنید یا از متدهای Lifecycle ناامن استفاده کنید. برای اطلاعات بیشتر در مورد StrictMode به مستندات React مراجعه کنید.

فایل index.js به طور پیش‌فرض کامپوننت App را وارد می‌کند. این کامپوننت یک کامپوننت ریشه است که توسط Create React App آماده شده است. این کامپوننت نقطه ورود به درخت کامپوننت‌ها است و به این ترتیب به موضوع بعدی ما یعنی «کامپوننت‌ها در React» می‌پردازیم.

کامپوننت‌ها – اجزای سازنده یک اپلیکیشن React

در React دو نوع کامپوننت وجود دارد: کامپوننت‌های کلاس و کامپوننت‌های تابعی. همانطور که از نام‌ها پیداست، یکی بر اساس کلاس‌ها و دیگری بر اساس توابع ساخته می‌شود. مدت‌ها صحبت از کامپوننت‌های هوشمند و ساده (Smart و Dumb Components) بود. این موضوع به این اشاره داشت که تا نسخه‌های پیشین React، کامپوننت‌های تابعی فقط برای نمایش ساختار استفاده می‌شدند و فاقد وضعیت یا Lifecycle خود بودند. اما این تغییر در نسخه 16.8 React با معرفی API Hook رخ داد. از این نسخه به بعد می‌توانید در کامپوننت‌های تابعی وضعیت محلی و مدیریت Lifecycle را انجام دهید. این نسخه همچنین باعث کاهش استفاده از کامپوننت‌های کلاس شد و به حدی رسید که امروز تقریباً هیچ کامپونت کلاسیکی در اپلیکیشن‌های مدرن React استفاده نمی‌شود. به همین دلیل، در این فصل ما تنها بر روی کامپوننت‌های تابعی تمرکز خواهیم کرد.

یکی از مزایای بزرگ React این است که کامپوننت‌ها بسیار سبک هستند. یک کامپوننت از یک تابع تشکیل می‌شود که یک ساختار JSX را باز می‌گرداند. در گام اول، ما با یک کامپوننت استاتیک List شروع می‌کنیم که قرار است لیست مخاطبان را که بعداً از API REST دریافت می‌کنیم، نمایش دهد. فهرست 9.2 کد منبع این کامپوننت استاتیک را نشان می‌دهد.




مرحله اول 
ساخت فولدر کامپونننتز{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}

مرحله دوم
ساخت فولدر نوبار داخل همین پوشه کامپوننتز که الان ساختیم {{{{{{{{{{{{{{{{}}}}}}}}}}

مرحله سوم
ساخت فولدر فوتر داخل همین پوشه کامپوننتز که الان ساختیم {{{{{{{{{{{{{{{{}}}}}}}}}}

مرحله چهارم 
ساخت کامپوننت یا همون فایلهای نوبار{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}
و فوتر با حرف اول بزرگ داخل فولدرهاشون با پسوند جی اس ایکس باید بشه و حتی فایل
اپ جی اس روهم بزارید با پسوند جی اس ایکس خیلی بهتره

مرحله پنجم 
اکسپورت کامپوننت جدید به خارج و ایمپورت همین کامپوننت جدید از داخل فایل اپ جی اس {{{{{{}}}}}}
که به اپ جی اس ایکس تغییرش دادم
کامپوننت جدید که در مرحله چهارم ساختیمو از داخل خود فایلش اکسپورت میکنیم اول از همه
و حالا وارد فایل اپ جی اس ایکس شده و ایمپورتش میکنیم اونجا
و حالا ران میکنیم برنامه رو اگه مجدد ارور داد داخل ترمینال دوباره ران میکنیم

مرحله ششم
استفاده از سی اس اس در ری اکت بصورت ابجکتی
داخل لاین اچ یک بنویس بصورت اینلاین برای تمرین
<h1 style={{textAlign:"center", backgroundColor:"yellow"}}>Navbar</h1>
اما حالا پاکش کن 
و بشکل زیر 
یک فایل سی اس اس بنام زیر داخل فایل همون فایل نوبار درست کن اول چون میخوام یه 
فایل سی اس اس برای فایل نوبار بسازیم
بخاطر این با پسوند مودول میسازیم که بصورت گلوبال روی فوتر هم این مشخصات اعمال نشه
کلا مشخصات سی اس اس کلی بصورت دیفالت داخل فایل ایندکس سی اس اس هستش
navbar.module.css {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}


مرحله هفتم
و سپس داخل فایل نوبار جی ایکس شو و ایمچورت کن این فایلو
import styled from "./navbar.module.css" {{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}


مرحله هشتم
و حالا داخل همین فایل نوبار جی اس ایکس بیا و دستور زیرو بذار 
  <div className={styled.header}> که کلا قطعه کدمون بشکل زیر میشه
:

*********navbar.jsx-Datei: *******
import styled from "./navbar.module.css";
function Navbar() { //Das ist eine Komponente und gibt eine JSX-Datei zurück.
    //جی اس ایکس یک گسترش سینتکسی برای جاوااسکریپت است که 
    // جی اس ایکس به شما این امکان را می‌دهد تا رشته‌های اچ تی ام ال را مستقیماً در جاوااسکریپت بنویسید
    return (
      <div className={styled.header}>
        <h1>Header</h1>
      </div>
    ); 
  }
  export default Navbar



مرحله نهم 
ساخت فایل سی اس اس معمولی بدون مودولز سی اس اس فقط برای فوتر {{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}
یعنی توی ساید بار سمت چپ روی فولدر فوتر راست کلیک کرده و نیو فایل 
footer.css



مرحله دهم 
ایمپورت معمولی فایل فوتر سی اس اس داخل فایل فوتر جی اس ایکس 
و سپس کلاس معمولی دادن به دیومون یا هرچیزی 
import './footer.css';

function Footer() {
    return(
    <div className='footer'>
       <h2>Footer</h2>
    </div>
    );  
  }
  export default Footer;




مرحله یازدهم اینه که تفاوت این دو فایل زیرو ببینیم>
footer.css  
و 
footer.module.css 
:  
برای مقایسه میرم توی اینسپکت تا  روی المنتز برم و میبینم که فایل معمولی کلاس نیم
استرینگ داده ولی در مودولز سی اس اس کلاسها رو یونیک میکنه با کد دادن به اخرشون تا 
دیگه الکی اجرا نشن
<div class="navbar_header__G5ild"><h1>Header</h1></div>
کلا بخاطر این سی  اس اس را  ب مودولزها نام گذاری میکنیم که اینها قاطی نشن ویونیک بشن

پس >
فقط ایندکس سی اس اس را گلوبال بسازید که بر روی همه پروژه اعمال بشود

نکته / 
در هر فایل کامپوننت که پسوند جی اس ایکس داره که اصطلاحا بهش میگیم کامپوننت بازش  
که میکنیم از دو قسمت جاوا اسکریپت و اچ تی ام ال که کدهای اچ تی امل 
رو داخل قسمت ریترن مینویسیم و بخشهای جی اسی یا لاجیک برنامه را اون بالای ریترن 
داخل کامپوننت مینویسیم

نکته / 
هروقت میخوای یه چیز جی اسی رو مثل متغیر داخل قسمت اچ تی ام ال قرار بدی از 
اکولاد بازو بسته استفاده میکنی مثل زیر>
 
function Navbar() { 
    let überschrift = "شادی بلاگ";
    return (
      <div className={styled.header}>
        <h3>{überschrift}</h3>
        <ul>
          <li>لیست مقالات </li>
          <li>ساخت مقاله</li>
          <li>درباره ما</li>
        </ul>
      </div>
    ); 
  }
export default Navbar


نکته > 
از طریق پراپز ما میتونیم کامپوننتهای متفاوت ولی درعین حال 
شبیه به هم داشته باشیم
اول میایم داخل اپ.جی اس دو تا نوبار یکسان رو میذاریم {{{{{{}}}}}}{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}

سپس میریم داخل نو بار جی اس پراپز را بعنوان ورودی کامپوننت میدیم به فانکشن نوبار{{{{{{{{{{{}}}}}}}}}}}
هر اسمی میشه گذاشت ولی اصولا پراپز میذارن

و حالا داخل همون کامپوننت نو بار داخل تگ اچ س هم ازش استفاده میکنیمو دستور زیرو مینویسیم{{{{{{{{}}}}}}}}
  <h3> {props.title} </h3>

پس ما داخل هر فانکشن کامپوننت میایم تمام ورودی ها را 
یکجا میدیم به پراپز یعنی تمام تایتلهایی که ما تعریف میکنیم میان
داخل پراپز مثل یه ابجکت میشینه و حالا میتونیم هرجا که خواستیم ازین 
پراپزه استفاده کنیم.


از درس 17 ببعد شروع ساخت کلی کامپوننتها اغاز میشود.
حالا شروع ساخت کامپوننت هوم یا صفحه اصلی>
یه فولدر جدید بنام پیجز داخل اس ار سی میسازیم{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
که در اینجا چهارتا صفحه داریم بنامهای >   {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
home , 
aboutUs 
واینکارو میکنیم چون هرکدام دقیقا یک صفحه ی کامل از بلاگ ما هستند
و داخل هر کدام ازین پوشه ها یا کامپوننتهای اصلی باز فایلهای کوچکتر میسازیم {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}

نکته >
وقتی میخوایم داخل فانکشنهای کامپوننتها بعد از ریترن چیزی را بنویسیم
 حتتما داخل دیو مینویسیم که در اینجا باید اون فایل هوم جدید که {{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}
 ساختیمو ایمپورت کنیم . چطوری؟ داخل دیو مینویسم هوم و اخرش کلید کنتر و  اسپیس و اینتر رو میزنم که 
 حتما فایل هوم در بالای صفحه ایمپورت بشه وگرنه در خروجی مرورگر ارور میبینی


نکته >
توی سی اس اس مودولز برای اسم کلاس دادن دیگه ازین روش زیر استفاده نمیکنیم >
.header-wrapper 
بلکه از روش کمل و یا با اندر اسکور استفاده میکنیم بشکل زیر >
.headerWrapper   =   .header_wrapper

حالا >
ساخت API:{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
یه پوشه خارج از همهش  میسازم بنام دیتا{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
داخلش یه فایل میسازم برای دیتابیسم بنام دی بی دات جیسون{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}


  
  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
  +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

درس بیستم از ری اکت > 
ساخت ای پی آی  لوکال> 

جیسون سرور فقط و فقط و فقط  برای  تست دیتا هست
//ابتدا دستور اجرای ای پی لوکال هاست محلی ساخت خودمو میزارم
// npx json-server --watch data/db.json --port 8000

/* فیلم زیرو نگاه کن
اموزش ری اکت از سالار حق 
درس بیستم جی سان سرور 
 


مرحله 1 >
برای ساخت ای پی ای فیک از وبسایت زیر استفاده کنید واردش بشید 
https://reqres.in/   {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
یا اینکه خودمون این ای پی آی رو بسازیم که چون در دروس ری اکت سالار حق سایتمون یه جورایی اختصاصیه پس باید خودمون بصورت لوکال بسازیمش
و یا از اموزش ری اکت سالار حق درس بیستم جیسان سرور رو ببین
و قرار نیست در دروس سالار حق برای ساخت ای پی ای بکند کار کنیم پس نترسید

وارد وبسایت قسمت یوزرز که بشی اینا ریکواست و ریسپانس هستند >

Request:
/api/users?page=2


Response:
200
{
    "page": 2,
    "per_page": 6,
    "total": 12,
    "total_pages": 2,
    "data": [
        {
            "id": 7,
            "email": "michael.lawson@reqres.in",
            "first_name": "Michael",
            "last_name": "Lawson",
            "avatar": "https://reqres.in/img/faces/7-image.jpg"
        },
        {
            "id": 8,
            "email": "lindsay.ferguson@reqres.in",
            "first_name": "Lindsay",
            "last_name": "Ferguson",
            "avatar": "https://reqres.in/img/faces/8-image.jpg"
        },
        {
            "id": 9,
            "email": "tobias.funke@reqres.in",
            "first_name": "Tobias",
            "last_name": "Funke",
            "avatar": "https://reqres.in/img/faces/9-image.jpg"
        },
        {
            "id": 10,
            "email": "byron.fields@reqres.in",
            "first_name": "Byron",
            "last_name": "Fields",
            "avatar": "https://reqres.in/img/faces/10-image.jpg"
        },
        {
            "id": 11,
            "email": "george.edwards@reqres.in",
            "first_name": "George",
            "last_name": "Edwards",
            "avatar": "https://reqres.in/img/faces/11-image.jpg"
        },





مرحله 2>
فرمت ای پی ای رو ازبالای وبسایت کپی کرده و پیست میکنیم داخل هوم جی اس ایکس برای خودمون فقط برای فرمتش بصورت زیر 
https://reqres.in/api/users?page=2



مرحله 3 >
صفحه ی دوم رو که اخر یوار ال هست ازش پاک میکنیم چون ما صفحه اصلیشو میخوایم
page=2
که حالا میشه باین صورت
https://reqres.in/api/users
این وبسایت از سایت اصلی رکز این تشکیل شده و مابقیش که میشه پت یا مسیر زیر 
/api/users
حالا اگه کلمه ای پی ای رو ازش حذف کنیم مسیر زیر که یوزرزه باقی می مونه 
https://reqres.in/users
که یعنی ای پی ایه میخواسته باین یوزرز برسه پس با اینحساب اگه ما یه ای پی ای ارتیکل داشته باشیم و بخوایم مقاله هارو بگیریم ای پی ای مادرواقع بشکل زیر میشه
https://reqres.in/articles
یعنی باید توی این ارتیکلز اخر قرارش بدیم که این ارتیکل اسم هست و اسم متغیره در واقع میگیم این ای پی ای زیری تمام ارتیکلا داخلشه
https://reqres.in/articles
یا مثلا تمام پستها را داشته باشه 
https://reqres.in/posts



مرحله چهارم > 
حالا چطور ما ای پی ای لوکال خودمونو بسازیم؟ 
:

یه پوشه داخل سایدبار سمت چپ و خارج از اس ار سی بساز بنام دیتا
داخلش یه فایل بنام و پسوند زیر بساز 
بخاطر اینکه فایلم قراره یه دیتا بیس باشه اسمشو که دلبخواهیه باسم زیر میزارم
db.json
 
مرحله پنجم >
دوتا فایل بالایی رو به فایل دی بی جیسونی که ساخته ایم انتقال میدیم فعلا چون قراره ازش استفاده کنیم بعدا یعنی دوتا فایل زیر که در بالا ساخته شد>
https://reqres.in/users
https://reqres.in/articles


مرحله ششم >
حالا داخل فایل زیر شده و دوفایل اماده شده بالایی را به فایل دی بی جیسون انتقال داده و نگهمیداریم تا ازش استفاده کنیم
db.json


مرحله هفتم>
از حالا کار ما با فایل دی بی جیسون است
که واردش شده و یه اکولاد بازو بسته میزاریم داخلش وقتی این اکولاد بازو بسته رو بذارم یعنی دیگه تا تیکه ی اول همه شو یعنی تا اینجای کارو ساختم
https://reqres.in
حالا اگه بخایم بگیم اسم این ای پی ای چی باشه یعنی یوزرز باشه یا ارتیکل باشه یا پست ها باشه 
یه دابل کوتیشن گذاشته و اسمی که میخوایمو میذاریم مثلا ارتیکلز  

مرحله هشتم>
اینهم که میسازیم میشه ای پی ای ما در زیر
 "articles":{
    
    }

مرحله نهم>
وقتی ما لیستی از یه چیزی داریم اونوداخل ارایه قرار میدیم
اگه من دیتا رو توی همون یوزرز ریسپانس وبسایت رکز اینو باز کنم میبینم که این یه ارایه س که هر ایتمش یه دونه ابجکت شده
که هردونه ازین ایتما قراره یه دونه ازین ایکونها یا فایلهای جاوااسکریپت که با شکل ساختم روی مانیتورو بما بده
 هر کدوم ازین ایتما یه عکس داره و یه تایتل داره و یه مدت  خاندن پنج دقیقه ای داره پس سه تا ایتم بغیر از ایدیش داره فقط.
که بشکل زیر تعریف میکنیم >
کل شکل ای پی ای ارتیکلمون برای یکدانه ابجکتش 
بصورت زیر هستش >

{
    "articles":{
        "status":true,
        "message": "successfull",
        "data":[
            {
                "id": 1,
                "imageUrl": "",
                "title": "title 1",
                "readingTime": 5
        },
        {
        "id": 2,
        "imageUrl":"",
        "title": "title 2",
        "readingTime":7
        },
      ]
    }
}
ما یه ای پی ای ساختیم به اسم ارتیکلز و داخلش دیتاشو گذاشتیم دیتاش یه استاتوس داره که در واقع ریسپانسش هست و میگه تورو هست ویه دانه دیتای اصلی داره
که یه ارایه س که هرچی بخایم ایتم از ابجکتها توش میزاریم و هر ابجکتی بخایم بزاریم یه , یا همون کاما میزاریم بینش
و دیتای دومی رو مینویسیم که الان پس دوتا ارتیکل داریم 


مرحله دهم > 
برای تستش که ببینیم ایا واقعا همچین دیتایی بما میده که  بخایم بگیریمش؟
برای دسترسی و استفاده ازش 
ترمینالو باز میکنیم و یه دستور باید بزنیم ک اینو برامون ران کنه چون لوکاله باید اونو ران کنیم>
npx json-server --watch data/db.json --port 8000
بهش گفتم که در چه پورتی ران بشه میذارم هشت هزار که با چیزی درگیر نشه.که همون سه هزارم میشه خودم پورتو عوض کنم
اول نصبش میکنه با یس زدن هم پکیجو نصب میکنه و هم دستور رو. یه ای پی ای بهم میده توی ترمینال بنام لوکال هاست هشت هزار .
مرحله یازدهم >
میام توی سرور و همین ادرسو میزنم هشت هزار بهم میده پیجو 
مثل رکرز بمن یه دیتایی داد 



هر تغییری که  خواستی میتونی بدی خودت 
مثلا مسیج اضافه کنی توی دیتات بشکل زیر >
{
    "articles":{
        "status":true,
        "message": "successfull",
        "data":[
            {
                "id": 1,
                "imageUrl": "",
                "title": "title 1",
                "readingTime": 5
            },


از حالا ادامه ی فیلم زیرو نگاه کن
اموزش ری اکت از سالار حق 
درس بیستم جی سان سرور 
از دقیقه 05:25

+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

فیلم درس بیست و یکم از ری اکت سالار حق>

حالا برو توی فایل زیر که قبلا ساختی
چونکه تمام هشت تا ارتیکلز داخل صفحه هوم هستند پس میریم اونجا
Home.jsx

مرحله اول>
وارد صفحه هوم که شدیم میریم توی قسمت جی اسمون که بالای ریترن هست همیشه و یه متغیر به اسم لت ارتیکلز تعریف میکنم و مساوی ی یک ارایه قرارش میدم
چرا قراره توی یک ارایه بنویسیمششششش؟ یه جمله میگم همیشه توی ذهنت باشه>
وقتی لیستی از ی چیزتکراری دارم مثل لیست مقالات یاکاربران یاکتابهابصورت ارایه مینویسم ک هرخونه این لیست ی ابجکته.هرررر چیزی دردیتایی ک بتو میدن ی ایدی بایدد 
داشته باشه مثل کدملی که توداری.هرکدوم ی عکس داره الان در مورد ما و یه تایتل یونیک همیشه و ی زمان خواندن 
که الان یه ابجکتها رو بترتیب میسازیم ایدی یک و باقی مشخصات و ایدی دو و غیره
. پس لیستمون شد یه ارایه که هر خونه ش شد یه ابجکت که بتعداد مقاله هامون اینجا ابجکت داریم.


مرحله دوم>
چطور ازش استفاده کنیم؟
ما کلا به یه دونه ازین کامپوننتایی ک ساختیم احتیاج  داریم نه هشت تا کامپوننت 
ما میگیم اقا بیا ازین یه دونه که الان این بالا ساختیم استفاده کن و 
بتعداد مقاله یا ارتیکلزی که داریم از این کامپوننت ارتیکل بساز
ازینجا ببعد فیلم اموزش ری اکت سالار حق قسمت بیستو یکم - لیستها دقیقه 07:40
که توضیحشو ازینجا ببعدادامه میدم
متد مپ استفاده میکنیم چرا متد مپ برای نمایش اجزای ارایه استفاده میکنیم و نه فورایچ که سوال امتحانه >
جواب > متد مپ وقتی روی یه ارایه استفاده میشه میاد روی ارایه یه حلقه میزنه و در ازاش هربار ی دونه ازین خونه هارو بما میده و ریترن داره متد هست مپ 
اما با فورایچ با اینکه حلقه رو میزنه و ممکنه اروری هم نده ولی ریترن انجام نمیده و ابجکتی از ارایه را در خروجی نمایش نمیده
برای مثال 
اسمشو بزار ریزالت که هررر چی میخاد دلت بزار 
متدمپ  حلقه میزنه روی ارایه و هربار یکی ازین ابجکت ها رو میندازه توی حلقه 
میتونی توی ارو فانکشن بزنی یا اینکه چون یه دونه مقداره میتونی بدون 
پرانتز بزنی یا اگه کلش هست داخل پرانتز بازو بسته بزاری
و توی پرانتز بعد از ارو یه مقداری رو برمیگردونی که ارتیکلو انداختیم توش
برو فیلمو ببین 





قسمت بیستو دوم >
از فیلم ری اکت سالار حق - کلیدها و پراپزها
داینامیک کردن ارتیکلها و پستها
و بعبارتی دیگر خواندن دیتاها یا ابجکتها بترتیب یک و دو و سه تا هشت
که ایدیها و عناوین و غیره ش فرق داره باهم


import Article from '../../components/article/Article';
import Navbar from '../../components/navbar/Navbar';
import styled from './home.module.css';
function Home() {
    //     https://reqres.in/api/users?page=2
    //شروع تعریف ای پی آی  در زیر برای این هشت تا ارتیکل البته یکیشو تعریف میکنیم
    //و فقط به یه دونه ازین تگ ارتیکلها نیازداریم نه هشت تاپس یکی فقط درست میکنیم
    let articles = [
        {
            id: 1,
            imageUrl: '',
            title: 'teitle 1',
            readingTime: 5,
        },
        {
            id: 2,
            imageUrl: '',
            title: 'teitle 2',
            readingTime: 8,
        },
        {
            id: 3,
            imageUrl: '',
            title: 'teitle 3',
            readingTime: 7,
        },
    ];
    return (
        <div className={styled.homeWrapper}>
            <Navbar title="Shadi Blog" />
            <div className="container">
                <h2>Neue Artikel</h2>
                <div className={styled.articles}>
                    {articles.map((article) => (//مایه حلقه میزنیم بامپ روی ارایه بالامون ک در ازاش هر ی مپ ی دونه ازین ارتیکل
                                                //داخل این پرانتز میده یعنی هربار این ارتیکل یه دونه ازیناس یه بار اولین ایدیه
                                                //دفعه دوم ایدی دومه و بار سوم هم ایدی سومه
                        <Article />
                    ))}
                </div>
            </div>
        </div>
    );
}

export default Home;


مبحث جدید >
dynamic post: 
ساخت پست های داینامیک و اضافه کردن پستها یا ارتیکلهای جدید به این پیج داینامیکمون

که دیگه لازم نیست از ارتیکلمون چهارتا بسازیم بلکه مپ زدیم روش و دیتامون داره از هوم جی اکس خونده میشه و هرچی بخایم ب
لینکها توی فایل هوم جی اکس اضافه میکنیم

برای اینکار دو روش هست که روش اول یک ایرادی داره که میگم اول بعد انجامش میدیم >

روش اول >**************************************************************************************************************************
هدف از روش اول مپ زدن هست که ببینیم به چ شکله با استفاده از پراپزها
روش مپ هست یعنی پاس دادن فانکشنها و ارایه ها و ابجکتها به مپ >
اموزش ری اکت سالار حق درس بیستو دوم دقیقه ی 08:30
این روش ایرادش اینه با اینکه این روش داینامیکه امااگه بری توی فایل هوم جی اس همین برنامه میبینی دستور لت ارتیکلزباعث میشه  
از لوکال میگیریم دیتامونو که در روش دوم میگیم که چطوری این دیتا و عکسها رو از سرور داشته باشیمو درواقع بصورت ای پی ای 
بگیریم و اینجا نمایش بدیم ؟؟؟؟؟
let articles=[{        // پس این دستور ایراد داره
..
..
..
..
}]
خب بریم سراغ همین روش اول که ایراد داره >

1>
چند تا عکس دانلود کردیم با سرچ عبارت زیر در گوگل >
image 200px*300px {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}
روی عکسهای دلخواه 
open image in new Tab 
میزنیم

2>  نیوتبها رو یکی یکی باز کرده و لینک بالاشو کپی میکنیم و میبریم داخل فایل و میریم داخل فایلی که دیتامونو ازش میگرفتیم یعنی
داخل Home.jsx
و داخل لینکهای ایمیج یوار ال قرار میدیم حالا میبینیم که هر ارتیکل یه عکس بخصوص خودش رو گرفته


3>
حالا باید کی تعریف کنیم برای تگ ارتیکلی که داخل فایل هوم جی اس ایکس در اخر کدها و ابجکتها
و یوار ال های ایمیجمون در همان اول کار تعریف کرده بودیم
که در ابتدا تا الان باین شکل بوده >
<Article article = {article} />
چونکه این جالب نیست که تغییری که در ارتیکل دستور بالا ایجاد میشه اسم ارایه را بذاریم بلکه ایدی چون یونیکه اونو باید قرار بدیم
الان یه کی بونیک که از همون ایدیهای ارتیکل که انها هم یونیک هستند و شماره هایشان از ایدی یک تا ایدی هشت دراین برنامه بوده 
استفاده میکنیم و خط کدبالایی باین شکل تبدیل میشه >
 <Article key={article.id} article = {article} />
 اینطوری اگه تغییری توی ایدیها بدیم ری اکت متوجه میشه که کدوم حذف شده یا تغییر کرده
 

 
 حالا
 روش دوم را که گرفتن دیتای موردنظر از ای پی با روش   
یوز افکت هست را در فایل 
2-salar-app-noMap-mit-API  
میبینیم.
برو بفایل موردنظر

*******************************************تمام ******************************************************
*/
